from utils import llm_call_deepseek as llm_call
from basic_workflow import chain

# data_processing_steps = [
#     """我会提供一个对话文本给你，对话人为S:货主、D:司机。由于存在识别问题以及大量的口语化内容，文本会有许多错误，尝试进行恢复，并总结对话中的有关费用的讨论""",
#     
#     """根据对话中关于费用的讨论内容，判断讨论的费用类型、对应费用金额，以及两人是否认可此费用""",
#     
#     """将费用划分且仅划分为六类[高速费,搬运费,停车费,等候费,运费,其他费用]，这五类的定义为：
#         高速费：D走高速、过桥等需要支付的费用
#         搬运费：D在装/卸货地搬运货物而支付的费用
#         停车费：D在装/卸货地停车产生的费用
#         等候费：D在装/卸货地等待/排队时间超过平台免费等候时间产生的费用
#         运费：D运输货物需要的费用
#         其他费用：所有不属于上述费用类型的费用""",
#     
#     """请将结果按照(费用类型,金额,是否达成一致)格式输出，如：
#         (搬运费,20,是)
#        请仅输出结果，不要输出其他内容
#     """
# ]

data_processing_steps = [
    """我会提供一个对话文本给你，对话人为S:货主、D:司机。由于存在识别问题以及大量的口语化内容，文本会有许多错误，尝试进行恢复，并总结对话中的有关费用的讨论.
    1. 根据对话中关于费用的讨论内容，判断讨论的费用类型、对应费用金额，以及两人是否认可此费用,
    2. 将费用划分且仅划分为五类[高速费,搬运费,停车费,等候费,运费,其他费用]，这五类的定义为：
        高速费：D走高速、过桥等需要支付的费用
        搬运费：D在装/卸货地搬运货物而支付的费用
        停车费：D在装/卸货地停车产生的费用
        等候费：D在装/卸货地等待/排队时间超过平台免费等候时间产生的费用
        运费：D运输货物需要的费用
        其他费用：所有不属于上述费用类型的费用,
    3. 请将结果按照(费用类型,金额,是否达成一致)格式输出，如：
        (搬运费,20,是)
    4. 请仅输出结果，不要输出其他内容
    """
]

report = """
{"dialogue":[["S:喂，你好。","D:喂。","S:啊。","D:喂，你好，老板那里拉什么东西啊？","S:啊，一个木箱。","D:你目前有多长多高？","S:呃长3米。","S:宽一米，二高一米五。","D:啊。","D:嗯。","D:啊，要高速费是谁付啊？","S:嗯。","S:哦。","S:还要加高速路费是吧？","D:对啊，高速费可能没有多少钱，可能只交20块钱嘛。","S:哦。","S:款。","S:可以呀，可以呀。","D:可以是吧？","S:要加加20块钱给你，然后我还有一点货带过来，也是一个地方装的。","D:再过来。","S:嗯，大概两个方啊，另外还有两个方也是这个工厂的。","D:怎么办？","D:喂。","D:装什么在哪，在哪里？","S:就两票货嘛总共加起来，总共加起来六七个方嘛。","D:两票货。","S:嗯。","D:减掉货你180块钱咯。","S:啊。","D:180块钱拉行吗？","S:可以啊，一百八一百八啊。","D:嗯，480那280。","S:嗯，把证件发到平台上。","D:在那个两天。","S:把你的牌照电话排在订单上。","D:我说那两票货是有多远呢？","S:一个地方，一个工厂。","D:嗯。","D:啊。","S:一个工厂，就是你汽车拉的地方。","D:啊。","D:那是一个工厂就装了。","S:嗯，因为。","D:222。","S:两票货。","D:就是到雅港就是一个地方去是吧？","S:对对对对对是的是的，因为他刚才只收一票嘛，现在现在加了一票嘛。","D:嗯。","D:好。","S:嗯。","D:哦。","S:你把车牌发到平台上。","D:嗯。","D:嗯，好。"]]}
"""

print("\nInput text:")
print(report)
formatted_result = chain(report, data_processing_steps)
